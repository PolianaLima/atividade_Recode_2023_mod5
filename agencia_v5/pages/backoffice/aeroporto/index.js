import React, {useEffect, useState} from 'react';
import {useAuth} from "@/context/authContext";
import Head from "next/head";
import {http} from "@/utils/http";
import Paginacao from "@/components/Paginacao";
import {useRouter} from "next/router";
import Link from "next/link";
import ModalComponent from "@/components/ModalComponent";
import {getTokenVerify} from "@/pages/api/getTokenVerify";


function Index(props) {
    getTokenVerify();

    const {token} = useAuth();
    const router = useRouter();

    const [page, setPage] = useState(0);
    const [totalPages, setTotalPages] = useState(1);
    const [aeroportos, setAeroportos] = useState([])
    const [idAeroportoToSelect, setidAeroportoToSelect] = useState([])


    const [modalIsOpen, setModalIsOpen] = useState(false);

    const openModal = (idAeroporto) => {
        setidAeroportoToSelect(idAeroporto)
        setModalIsOpen(true);
    };

    const closeModal = () => {
        setModalIsOpen(false);
        router.reload();
    };


    /*Controle de UseForm*/

    //Bucando a lista de aeroporto
    useEffect(() => {
        http.get(`/aeroportos?page=${page}&size=10`, {
            headers: {
                'Authorization': `Bearer ${token}`
            },
            params: {page}
        })
            .then(response => {
                setAeroportos(response.data.content);
                setTotalPages(response.data.totalPages);

            })
            .catch((error) => {
                console.error('Erro ao listar aeroportos', error);
            });

    }, [page, token]);


    //Excluindo um aeroporto
    const handleDeleteAeroporto = () => {

        http.delete(`/aeroportos/${idAeroportoToSelect}`, {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        })
            .then(() => {
                closeModal();
            })
            .catch((erro) => {
                console.error("Erro ao excluir", erro)
            })
    }

    return (
        <>

            <Head>
                <title>Agencia de Viagems - Cadastro de Aeroporto </title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className="container">
                <div className="container d-sm-flex flex-row justify-content-between mb-3">
                    <h3>Lista de Aeroportos</h3>
                    <Link href="/backoffice/aeroporto/cadastro" className="btn btn-success pe-5 ps-5" onClick={(e) => {
                    }}>Novo
                    </Link>
                </div>

                <table className="table">
                    <thead>
                    <tr className="border border-2 border-warning">
                        <th scope="col">Nome</th>
                        <th scope="col">Codigo</th>
                        <th scope="col">Sigla</th>
                        <th scope="col">Cidade</th>
                        <th scope="col">Estado</th>
                        <th scope="col" className="d-flex justify-content-end">Ações</th>

                    </tr>
                    </thead>
                    <tbody>

                    {aeroportos && aeroportos.length > 0 ? (

                        aeroportos.map(aeroporto =>
                            <tr key={aeroporto.id}>
                                <td>{aeroporto.nome}</td>
                                <td>{aeroporto.codigo}</td>
                                <td>{aeroporto.sigla}</td>
                                <td>{aeroporto.cidade}</td>
                                <td>{aeroporto.estado}</td>
                                <td className="d-flex justify-content-end">
                                    <Link href={`/backoffice/aeroporto/${aeroporto.id}`}
                                          className="btn btn-success me-3">Editar</Link>
                                    <button className="btn btn-danger"
                                            onClick={() => openModal(aeroporto.id)}>Excluir
                                    </button>
                                </td>

                            </tr>
                        )) : (
                        <tr>
                            <td colSpan="6">Nenhum aeroporto encontrado.</td>
                        </tr>
                    )}
                    </tbody>
                </table>
                <Paginacao page={page} totalPages={totalPages} setPage={setPage}/>

                <ModalComponent isOpen={modalIsOpen}>
                    <p>Deseja excluir o aeroporto? </p>
                    <div className="d-flex justify-content-between">

                        <button className="btn  bg-success me-2" onClick={(e) => {
                            e.preventDefault();
                            handleDeleteAeroporto()
                        }}>CONFIRMAR
                        </button>
                        <button className="btn  btn-danger" onClick={closeModal}>CONCELAR</button>
                    </div>

                </ModalComponent>
            </main>


        </>
    );
}

export default Index;
