import React, {useEffect, useState} from 'react';
import Head from "next/head";
import {useRouter} from "next/router";
import Image from "next/image";
import {getUserFromCookie} from "@/utils/Cookies";
import CardViagens from "@/components/cards/CardViagens";
import Link from "next/link";
import {http} from "@/utils/http";



function Index(props) {

    const [usuarioData, setUsuarioData] = useState([{"nome": "", login: ""}])
    const [tokenUsuario, setTokenUsuario] = useState([{"token": ""}])
    const [passagem, setPassagem] = useState([]);
    const router = useRouter();



    useEffect(() => {
        const data = getUserFromCookie();
        setUsuarioData(data.usuario)
        setTokenUsuario(data.token)
    }, []);

    useEffect(() => {
        const dataPassagem = async () => {
            try {
                const passagens = await http.get(`/passagemusuario/${usuarioData.id}`, {
                    headers: {
                        Authorization: `Bearer ${tokenUsuario}`
                    }
                });
                const passagensData = passagens.data;

                // Use Promise.all to parallelize multiple API requests
                const [passagensWithDetails] = await Promise.all([Promise.all(
                    passagensData.map(async (passagem) => {
                        // Fetch Passageiro details
                        const passageiro = await http.get(`/passageiros/${passagem.id_passageiro}`, {
                            headers: {
                                Authorization: `Bearer ${tokenUsuario}`
                            }
                        });

                        // Fetch Voo details
                        const voo = await http.get(`/voos/${passagem.id_voo}`, {
                            headers: {
                                Authorization: `Bearer ${tokenUsuario}`
                            }
                        });

                        const vooData = voo.data;

                        // Fetch destination empresaDetails

                        const  empresa = await  http.get(`/empresasaereas/${vooData.id_empresa}`,{
                            headers:{
                                Authorization: `Bearer ${tokenUsuario}`
                            }
                        })


                        const  originAirport = await http.get(`/aeroportos/${vooData.id_aeroporto_partida}`, {
                            headers: {
                                Authorization: `Bearer ${tokenUsuario}`
                            }
                        })



                        // Fetch destination airport details
                        const destinationAirport = await http.get(`/aeroportos/${vooData.id_aeroporto_chegada}`, {
                            headers: {
                                Authorization: `Bearer ${tokenUsuario}`
                            }
                        });

                        const vooDetails = {
                            ...vooData,
                            origem: {
                                aeroporto: originAirport.data.nome,
                                cidade: originAirport.data.cidade,
                                sigla: originAirport.data.sigla
                            },
                            destino: {
                                aeroporto: destinationAirport.data.nome,
                                cidade: destinationAirport.data.cidade,
                                sigla: destinationAirport.data.sigla
                            }
                        }



                        // Return the passagem data with additional details
                        return {
                            ...passagem,
                            passageiro: passageiro.data,
                            voo: vooDetails,
                            empresa: empresa.data
                        };
                    })
                )]);

                setPassagem(passagensWithDetails);

            } catch (e) {
                console.error("Erro ao buscar passagens", e);
                //Tratar erro aqui vindo do back end
            }
        };

        dataPassagem();
    }, [tokenUsuario, usuarioData.id]);


    useEffect(() => {
        if (!tokenUsuario) router.push("/login")
    }, [router, tokenUsuario]);


    return (
        <>
            <Head>
                <title>Agencia de Viagems - Meu Perfil </title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className="container mb-5">
                <h1 className="text-secondary mb-5">Meu Perfil</h1>

                <div className="d-sm-flex align-items-center p-3 bg-app">
                    <div>
                        <Image src="/img/icone_user.png" width={100} height={100} alt="Icone Usuario"/>
                    </div>
                    <div className="d-flex flex-column text-light">
                        <h3 className="m-0">{usuarioData.nome}</h3>
                        <p>{usuarioData.login}</p>
                    </div>
                </div>

                <div className="mt-5 d-sm-flex flex-row-reverse justify-content-between">

                    <div className="w-100" style={{maxWidth: 400}}>
                        <div className="p-4 d-flex flex-column shadow border w-100 ms-2 justify-content-center">
                            <div>
                                <Image src="/img/img_contato.png" width={200} height={200} alt="Card Busca Voos"/>
                            </div>
                            <h4 className="text-secondary text-center">Planeje sua próxima viaje</h4>
                            <p className="text-center">Aproveite nossas promoçoes e planeje sua proxima viaje</p>
                            <Link href="/" className="btn btn-warning">Encontre seu Voo</Link>
                        </div>

                    </div>


                    <div className="w-100">
                        {passagem && passagem.length > 0 ? (
                            passagem.map(passagemMap =>
                                <div key={passagemMap.id}>
                                    <CardViagens passagem={passagemMap} token={tokenUsuario}/>
                                </div>
                            )
                        ) : (
                            <div className="d-flex flex-column justify-content-center align-items-center ">
                                <h3 className="text-body-secondary"> OPS! Sem dados de viagens no momento!</h3>
                                <img width="48" height="48" src="https://img.icons8.com/color/48/000000/happy--v1.png"
                                     alt="happy--v1"/>
                            </div>
                        )}
                    </div>

                </div>

            </main>
        </>
    );
}

export default Index;