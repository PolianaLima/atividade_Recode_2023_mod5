import React, {useEffect, useState} from 'react';
import Head from "next/head";
import Image from "next/image";
import {useForm} from "react-hook-form";
import axios from "axios";
import {http} from "@/utils/http";
import {router, useRouter} from "next/router";
import {useAuth} from "@/context/authContext";

function Index(props) {

    const router = useRouter();
    const [error, setError] = useState(false)
    const {
        register,
        handleSubmit,
        formState: {errors}
    } = useForm();


    const onSubmit = async (data) => {

        try {
            await http.post("/auth/register", data)
                .then(response => {
                    router.push("/login")
                })
        } catch (e) {
            if (axios.isAxiosError(error) && error.response) {
                console.error('Erro na resposta da API:', error.response.data);
                setError(true)
            } else {
                console.error('Erro ao enviar dados para a API:', e);
                setError(true)
            }
        }
    }


    return (
        <>
            <Head>
                <title>Agencia de Viagems - Cadastro Usuario </title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className="container mt-5  d-sm-flex justify-content-center align-content-center">

                <div className="mt-5 d-flex w-100 justify-content-end">
                    <Image src="/img/icone_cadastro.png" width={400} height={400} alt="Imagem Cadastro"/>
                </div>
                <div className="form container mt-5 w-100 d-flex flex-column justify-content-start p-3">
                    <form className="d-flex flex-column" style={{maxWidth: 400}}>
                        <h3 className="mb-5 text-secondary">Crie sua conta</h3>
                        <input type="text"
                               className="form-control mb-3"
                               placeholder="Nome Completo"
                               {...register("nome", {required: true})}
                        />
                        {errors?.nome?.type === "required" && (
                            <p className="text-danger fw-bold">Campo Obrigatório</p>
                        )}

                        <input type="email"
                               className="form-control mb-3"
                               placeholder="example@email.com"
                               {...register("login", {required: true})}
                        />
                        {errors?.nome?.type === "required" && (
                            <p className="text-danger fw-bold">Campo Obrigatório</p>
                        )}
                        {error ? (
                            <p className="text-danger fw-bold">Usuario ja cadastrado</p>
                        ) : ("")}
                        <input type="password"
                               className="form-control mb-3"
                               placeholder="senha"
                               {...register("senha", {required: true})}
                        />
                        {errors?.nome?.type === "required" && (
                            <p className="text-danger fw-bold">Campo Obrigatório</p>
                        )}


                        <button className="btn btn-warning" onClick={(e) => {
                            e.preventDefault();
                            handleSubmit(onSubmit)();
                        }}>SALVAR
                        </button>
                    </form>

                </div>

            </main>
        </>
    );
}

export default Index;